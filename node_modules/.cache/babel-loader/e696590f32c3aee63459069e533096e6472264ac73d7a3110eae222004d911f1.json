{"ast":null,"code":"// Import necessary components from Chart.js\nimport { Chart, registerables } from 'chart.js';\nexport default {\n  props: {\n    currentSection: String,\n    purchasedList: Array,\n    bankImage: String\n  },\n  mounted() {\n    // Register all components from Chart.js\n    Chart.register(...registerables);\n\n    // Initialize charts\n    const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n    const ctxDoughnut = document.getElementById(\"myDoughnutChart\").getContext(\"2d\");\n    ctx.height = 400;\n\n    // Bar chart\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: [\"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\"],\n        datasets: [{\n          label: \"Utilities\",\n          data: [450, 500, 620, 800, 750, 900],\n          backgroundColor: [\"#6970c9\", \"#31cd3e\", \"#2292a4\", \"#e59400\", \"#e21616\", \"#b94ed8\"]\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    });\n\n    // Doughnut chart\n    var myDoughnutChart = new Chart(ctxDoughnut, {\n      type: \"doughnut\",\n      data: {\n        labels: [\"Expenses\", \"Savings\"],\n        datasets: [{\n          data: [300, 300],\n          backgroundColor: [\"#31cd3e\", \"#d5d5d5\"]\n        }]\n      },\n      options: {\n        responsive: false,\n        maintainAspectRatio: false,\n        cutout: 90,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        // Use the afterDraw callback to add text\n        animation: {\n          onComplete: function (context) {\n            var chartInstance = context.chart;\n            var ctx = chartInstance.ctx;\n            ctx.textAlign = \"center\";\n            ctx.textBaseline = \"middle\";\n            var centerX = (chartInstance.chartArea.left + chartInstance.chartArea.right) / 2;\n            var centerY = (chartInstance.chartArea.top + chartInstance.chartArea.bottom) / 2;\n            var rightX = chartInstance.chartArea.right;\n            var rightY = centerY;\n            ctx.fillStyle = \"#008000\";\n            ctx.font = \"bold 40px 'Outfit'\";\n            ctx.fillText(\"$300\", centerX, centerY - 8);\n            ctx.fillStyle = \"#000\";\n            ctx.font = \"20px 'Outfit'\";\n            ctx.fillText(\"of 600 saved\", centerX, centerY + 20);\n            ctx.fillText(\"this month\", centerX, centerY + 40);\n          }\n        }\n      }\n    });\n  }\n};","map":{"version":3,"names":["Chart","registerables","props","currentSection","String","purchasedList","Array","bankImage","mounted","register","ctx","document","getElementById","getContext","ctxDoughnut","height","type","data","labels","datasets","label","backgroundColor","options","responsive","maintainAspectRatio","myDoughnutChart","cutout","plugins","legend","display","tooltip","enabled","animation","onComplete","context","chartInstance","chart","textAlign","textBaseline","centerX","chartArea","left","right","centerY","top","bottom","rightX","rightY","fillStyle","font","fillText"],"sources":["/Users/dishashetty/Desktop/Divercity.io/divercity.io/src/components/RightHandSide.vue"],"sourcesContent":["<template>\n  <div id=\"rhs\" :class=\"{ active: currentSection === 'home' }\">\n    <div class=\"active-budget-card\">\n      <div class=\"stats\">\n        <div class=\"total\"> Spent\n          <div id=\"budget-amount\" style=\"color:rgb(229, 16, 16); font-size: 25px\">$800</div>\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"middle\"> Available\n          <div id=\"budget-amount\" style=\"color:#31cd3e; font-size: 25px\">$1200</div>\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"right1\"> Budget\n          <div id=\"budget-amount\" style=\"color:rgb(2, 8, 3); font-size: 25px\">$2000</div>\n        </div>\n      </div>\n      <div class=\"box-progress-bar\">\n        <span class=\"box-progress\" style=\"width: 40%\"></span>\n      </div>\n    </div>\n\n    <br>\n    <div class=\"recent\"> 6 Month Snapshot </div>\n    <br>\n    <div class=\"graph\">\n      <canvas id=\"myChart\" style=\"height:400px;\"></canvas>\n    </div>\n\n    <br>\n    <div class=\"recent\">\n      <div class=\"recent-transactions\">Recent Transactions</div>\n      <div class=\"see-all\">See all</div>\n      <br><br>\n    </div>\n    <div class=\"view\">\n      <div class=\"purchased-card\" v-for=\"list in purchasedList\" :key=\"list.label\" style=\"cursor: pointer;\">\n        <div class=\"minimal-info\">\n          <div class=\"left\">\n            <div class=\"icon\">\n              <div style=\"position: relative;display: flex;justify-content: center;align-items: center;flex-direction: column;\">\n                <div style=\"position: relative; display: flex; justify-content: center; align-items: center;\">\n                  <div id=\"middle-circle1\">\n                    <img :src=\"list.image\" alt=\"icon\">\n                  </div>\n                  <div id=\"progress-spinner\" :style=\"{'background-color': list.hex}\">\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"info\">\n              <div id=\"title\">\n                <span>{{list.label}}</span>\n              </div>\n              <div class=\"additional\">\n                {{list.sublabel}}\n              </div>\n            </div>\n          </div>\n          <div class=\"right\" style=\"white-space: nowrap;\">\n            <span id=\"amount1\" style=\"color: rgb(3, 6, 8);\">${{list.cost}}</span>\n            <span id=\"date\">{{list.date}}</span>\n          </div>\n          <div class=\"right2\">\n            <i class=\"fa-solid fa-angle-right\" style=\"margin-right: -20px;\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <br>\n    <div class=\"recent\"> Bank & Credit Cards </div>\n    <br>\n    <div class=\"purchased-card\" style=\"cursor: pointer;\">\n      <div class=\"minimal-info\">\n        <div class=\"left\">\n          <div class=\"icon\">\n            <div style=\"position: relative; display: flex; justify-content: center; align-items: center; flex-direction: column;\">\n              <div style=\"position: relative; display: flex; justify-content: center; align-items: center;\">\n                <img :src=\"bankImage\" id=\"bank\" alt=\"BOA\" />\n              </div>\n            </div>\n          </div>\n          <div class=\"info\">\n            <div id=\"title\">\n              <span>Bank of America</span>\n            </div>\n            <div class=\"additional\">...4765</div>\n          </div>\n        </div>\n        <div class=\"right\">\n          <span id=\"amount\" style=\"color: #6970c9;\">Balance</span>\n          <span id=\"date\" style=\"color: #6970c9;\">$1,326.23</span>\n        </div>\n        <i class=\"fa-solid fa-angle-up\" style=\"margin-right: -20px;\"></i>\n      </div>\n    </div>\n\n    <br>\n    <div class=\"recent\"> Savings Goals\n      <div class=\"see-all\"><span style=\"font-size: 3rem;\">&#43;</span></div>\n    </div>\n\n    <div class=\"graph1\">\n      <div class=\"trip\"> Italy Trip\n        <div class=\"see-all1\" style=\"color: rgb(105, 112, 201); margin-left: 650px; margin-top: -30px; font-size: 1.2rem;\">See details\n        </div>\n      </div>\n      <br>\n\n      <canvas id=\"myDoughnutChart\"></canvas>\n\n      <div id=\"additionalText\" class=\"additional-text\"></div>\n      <div id=\"additionalText1\" class=\"additional-text1\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n// Import necessary components from Chart.js\nimport { Chart, registerables } from 'chart.js';\n\nexport default {\n  props: {\n    currentSection: String,\n    purchasedList: Array,\n    bankImage: String,\n  },\n  mounted() {\n    // Register all components from Chart.js\n    Chart.register(...registerables);\n\n    // Initialize charts\n    const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n    const ctxDoughnut = document.getElementById(\"myDoughnutChart\").getContext(\"2d\");\n    ctx.height = 400;\n\n    // Bar chart\n    new Chart(ctx, {\n      type: \"bar\",\n      data: {\n        labels: [\"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\"],\n        datasets: [\n          {\n            label: \"Utilities\",\n            data: [450, 500, 620, 800, 750, 900],\n            backgroundColor: [\"#6970c9\", \"#31cd3e\", \"#2292a4\", \"#e59400\", \"#e21616\", \"#b94ed8\"],\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    });\n\n    // Doughnut chart\n    var myDoughnutChart = new Chart(ctxDoughnut, {\n  type: \"doughnut\",\n  data: {\n    labels: [\"Expenses\", \"Savings\"],\n    datasets: [\n      {\n        data: [300, 300],\n        backgroundColor: [\"#31cd3e\", \"#d5d5d5\"],\n      },\n    ],\n  },\n  options: {\n    responsive: false,\n    maintainAspectRatio: false,\n    cutout: 90,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: false,\n      },\n    },\n    // Use the afterDraw callback to add text\n    animation: {\n      onComplete: function (context) {\n        var chartInstance = context.chart;\n        var ctx = chartInstance.ctx;\n\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        var centerX = (chartInstance.chartArea.left + chartInstance.chartArea.right) / 2;\n        var centerY = (chartInstance.chartArea.top + chartInstance.chartArea.bottom) / 2;\n\n        var rightX = chartInstance.chartArea.right;\n        var rightY = centerY;\n        \n        ctx.fillStyle = \"#008000\";\n        ctx.font = \"bold 40px 'Outfit'\";\n        ctx.fillText(\"$300\", centerX, centerY - 8);\n\n        ctx.fillStyle = \"#000\"; \n        ctx.font = \"20px 'Outfit'\"; \n        ctx.fillText(\"of 600 saved\", centerX, centerY + 20);\n        ctx.fillText(\"this month\", centerX, centerY + 40);    \n  },\n    },\n  },\n});\n  },\n};\n</script>\n\n<style scoped>\n/* Add your CSS styles for the RHS component here */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
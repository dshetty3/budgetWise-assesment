{"ast":null,"code":"import { Chart, registerables } from \"chart.js\";\nexport default {\n  props: {\n    currentSection: String\n  },\n  data() {\n    return {\n      bankImage: require('@/assets/BOA.png'),\n      purchasedList: [{\n        label: \"Cold Brew\",\n        hex: 'rgb(8, 29, 149)',\n        image: 'https://budgetwise.co/img/gift.811ce353.svg',\n        sublabel: 'Starbucks',\n        cost: '5.92',\n        date: '03-30-2022'\n      }, {\n        label: \"Coursera\",\n        hex: 'rgb(83, 213, 228)',\n        image: 'https://budgetwise.co/img/education.20df2648.svg',\n        sublabel: 'Education',\n        cost: '39.00',\n        date: '03-12-2022'\n      }, {\n        label: \"AppleTree\",\n        hex: 'rgb(52, 196, 62)',\n        image: 'https://budgetwise.co/img/groceries.e667316a.svg',\n        sublabel: 'Groceries',\n        cost: '3.98',\n        date: '03-03-2022'\n      }, {\n        label: \"BKST-U-PENN\",\n        hex: 'rgb(32, 139, 215)',\n        image: 'https://budgetwise.co/img/shopping.a541af7b.svg',\n        sublabel: 'Shopping',\n        cost: '49.89',\n        date: '03-03-2022'\n      }],\n      myBarChart: null,\n      myDoughnutChart: null\n    };\n  },\n  mounted() {\n    Chart.register(...registerables);\n    this.renderCharts();\n  },\n  updated() {\n    if (this.currentSection === 'home') {\n      this.renderCharts();\n    }\n  },\n  methods: {\n    renderCharts() {\n      if (this.myBarChart) {\n        this.myBarChart.destroy();\n      }\n      if (this.myDoughnutChart) {\n        this.myDoughnutChart.destroy();\n      }\n      const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n      const ctxDoughnut = document.getElementById(\"myDoughnutChart\").getContext(\"2d\");\n      ctx.canvas.width = 400;\n      ctx.canvas.height = 400;\n      ctxDoughnut.canvas.width = 300;\n      ctxDoughnut.canvas.height = 300;\n      this.myBarChart = new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: [\"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\"],\n          datasets: [{\n            label: \"Utilities\",\n            data: [450, 500, 620, 800, 690, 500],\n            backgroundColor: \"rgba(34, 167, 240)\",\n            borderColor: \"rgba(34, 167, 240)\",\n            borderWidth: 1,\n            barPercentage: 0.7\n          }, {\n            label: \"Housing\",\n            data: [300, 250, 400, 400, 350, 250],\n            backgroundColor: \"rgba(242, 38, 19)\",\n            borderColor: \"rgba(242, 38, 19)\",\n            borderWidth: 1,\n            barPercentage: 0.7\n          }, {\n            label: \"Entertainment\",\n            data: [200, 150, 400, 450, 350, 150],\n            backgroundColor: \"rgba(249, 105, 14)\",\n            borderColor: \"rgba(249, 105, 14)\",\n            borderWidth: 1,\n            barPercentage: 0.7\n          }, {\n            label: \"Transportation\",\n            data: [350, 120, 300, 300, 350, 190],\n            backgroundColor: \"rgba(249, 191, 59)\",\n            borderColor: \"rgba(249, 191, 59)\",\n            borderWidth: 1,\n            barPercentage: 0.7\n          }, {\n            label: \"Food\",\n            data: [100, 100, 100, 150, 150, 100],\n            backgroundColor: \"rgba(1,1,122)\",\n            borderColor: \"rgba(1,1,122)\",\n            borderWidth: 1,\n            barPercentage: 0.7\n          }, {\n            label: \"Other\",\n            data: [400, 200, 350, 350, 350, 100],\n            backgroundColor: \"rgba(102, 51, 153)\",\n            borderColor: \"rgba(102, 51, 153)\",\n            borderWidth: 1,\n            barPercentage: 0.7\n          }]\n        },\n        options: {\n          responsive: false,\n          maintainAspectRatio: true,\n          scales: {\n            x: {\n              stacked: true,\n              grid: {\n                display: false\n              },\n              ticks: {\n                color: \"#000\" // Color of x-axis labels\n              }\n            },\n            y: {\n              stacked: true,\n              grid: {\n                display: false\n              },\n              ticks: {\n                color: \"#000\",\n                // Color of y-axis labels\n                callback: function (value) {\n                  if (value >= 1500) {\n                    return (value / 1000).toFixed(1) + \"k\";\n                  }\n                  return value;\n                }\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: true,\n              position: \"bottom\",\n              labels: {\n                color: \"#333\",\n                // Font color for legend labels\n                usePointStyle: true,\n                borderRadius: 1,\n                boxWidth: 30\n              },\n              align: \"center\",\n              maxItems: 3\n            },\n            annotation: {\n              annotations: [{\n                type: \"line\",\n                mode: \"horizontal\",\n                scaleID: \"y\",\n                value: 1500,\n                borderColor: \"black\",\n                borderWidth: 0.5,\n                label: {\n                  content: \"1.5k\",\n                  enabled: true,\n                  position: \"end\"\n                }\n              }, {\n                type: \"line\",\n                mode: \"horizontal\",\n                scaleID: \"y\",\n                value: 2000,\n                borderColor: \"rgba(255, 0, 0, 0.5)\",\n                borderWidth: 1,\n                borderDash: [3, 3],\n                label: {\n                  position: \"right\",\n                  enabled: true\n                }\n              }, {\n                type: \"line\",\n                mode: \"horizontal\",\n                scaleID: \"y\",\n                value: 2500,\n                borderColor: \"rgba(255, 0, 0, 0.5)\",\n                borderWidth: 1,\n                borderDash: [3, 3],\n                label: {\n                  position: \"right\",\n                  enabled: true\n                }\n              }]\n            }\n          }\n        },\n        plugins: [{\n          id: \"highlightAugust\",\n          afterDraw: chart => {\n            const ctx = chart.ctx;\n            const xAxis = chart.scales.x;\n            const labelIndex = chart.data.labels.indexOf(\"Aug\");\n            if (labelIndex !== -1) {\n              const x = xAxis.getPixelForTick(labelIndex);\n              const y = xAxis.bottom;\n              ctx.save();\n              ctx.fillStyle = \"#5157bf\";\n              ctx.fillRect(x - 20, y - 20, 40, 20);\n              ctx.fillStyle = \"white\";\n              ctx.font = \"12px Arial\";\n              ctx.textAlign = \"center\";\n              ctx.textBaseline = \"middle\";\n              ctx.fillText(\"Aug\", x, y - 10);\n              ctx.arcTo = \"4px\";\n              ctx.restore();\n            }\n          }\n        }]\n      });\n\n      // Initialize doughnut chart\n      this.myDoughnutChart = new Chart(ctxDoughnut, {\n        type: \"doughnut\",\n        data: {\n          labels: [\"Expenses\", \"Savings\"],\n          datasets: [{\n            data: [300, 300],\n            backgroundColor: [\"#31cd3e\", \"#d5d5d5\"]\n          }]\n        },\n        options: {\n          responsive: false,\n          maintainAspectRatio: false,\n          cutout: 90,\n          plugins: {\n            legend: {\n              display: false\n            },\n            tooltip: {\n              enabled: false\n            }\n          },\n          animation: {\n            onComplete: function (context) {\n              var chartInstance = context.chart;\n              var ctx = chartInstance.ctx;\n              ctx.textAlign = \"center\";\n              ctx.textBaseline = \"middle\";\n              var centerX = (chartInstance.chartArea.left + chartInstance.chartArea.right) / 2;\n              var centerY = (chartInstance.chartArea.top + chartInstance.chartArea.bottom) / 2;\n              ctx.fillStyle = \"#008000\";\n              ctx.font = \"bold 40px 'Outfit'\";\n              ctx.fillText(\"$300\", centerX, centerY - 8);\n              ctx.fillStyle = \"#000\";\n              ctx.font = \"normal 16px 'Outfit'\";\n              ctx.fillText(\"of 600 saved\", centerX, centerY + 25);\n              ctx.fillText(\"this month\", centerX, centerY + 45);\n            }\n          }\n        }\n      });\n\n      // Add additional text\n      document.getElementById('additionalText').innerText = \"Total Savings: $300 of $3,000\";\n      document.getElementById('additionalText1').innerText = \"by April 15, 2023\";\n    }\n  }\n};","map":{"version":3,"names":["Chart","registerables","props","currentSection","String","data","bankImage","require","purchasedList","label","hex","image","sublabel","cost","date","myBarChart","myDoughnutChart","mounted","register","renderCharts","updated","methods","destroy","ctx","document","getElementById","getContext","ctxDoughnut","canvas","width","height","type","labels","datasets","backgroundColor","borderColor","borderWidth","barPercentage","options","responsive","maintainAspectRatio","scales","x","stacked","grid","display","ticks","color","y","callback","value","toFixed","plugins","legend","position","usePointStyle","borderRadius","boxWidth","align","maxItems","annotation","annotations","mode","scaleID","content","enabled","borderDash","id","afterDraw","chart","xAxis","labelIndex","indexOf","getPixelForTick","bottom","save","fillStyle","fillRect","font","textAlign","textBaseline","fillText","arcTo","restore","cutout","tooltip","animation","onComplete","context","chartInstance","centerX","chartArea","left","right","centerY","top","innerText"],"sources":["/Users/dishashetty/Desktop/Divercity.io/divercity.io/src/components/RightHandSide.vue"],"sourcesContent":["<template>\n  <div id=\"rhs\" :class=\"{ active: currentSection === 'home' }\">\n    <div class=\"active-budget-card\">\n      <div class=\"stats\">\n        <div class=\"total\">\n          Spent\n          <div id=\"budget-amount\" style=\"color: rgb(229, 16, 16); font-size: 25px\">\n            $800\n          </div>\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"middle\">\n          Available\n          <div id=\"budget-amount\" style=\"color: #31cd3e; font-size: 25px\">\n            $1200\n          </div>\n        </div>\n        <div class=\"divider\"></div>\n        <div class=\"right1\">\n          Budget\n          <div id=\"budget-amount\" style=\"color: rgb(2, 8, 3); font-size: 25px\">\n            $2000\n          </div>\n        </div>\n      </div>\n      <div class=\"box-progress-bar\">\n        <span class=\"box-progress\" style=\"width: 40%\"></span>\n      </div>\n    </div>\n\n    <br />\n    <div class=\"recent\">6 Month Snapshot</div>\n    <br />\n    <div class=\"graph\">\n      <canvas id=\"myChart\" style=\"height: 350px\"></canvas>\n    </div>\n\n    <br />\n    <div class=\"recent\">\n      <div class=\"recent-transactions\">Recent Transactions</div>\n      <div class=\"see-all\">See all</div>\n      <br /><br />\n    </div>\n    <div class=\"view\">\n      <div class=\"purchased-card\" v-for=\"list in purchasedList\" :key=\"list.label\" style=\"cursor: pointer\" >\n        <div class=\"minimal-info\">\n          <div class=\"left\">\n            <div class=\"icon\">\n              <div style=\" position: relative; display: flex; justify-content: center; align-items: center; flex-direction: column;\">\n                <div\n                  style=\" position: relative; display: flex; justify-content: center; align-items: center; \">\n                  <div id=\"middle-circle1\">\n                    <img :src=\"list.image\" alt=\"icon\" />\n                  </div>\n                  <div id=\"progress-spinner\" :style=\"{ 'background-color': list.hex }\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"info\">\n              <div id=\"title\">\n                <span>{{ list.label }}</span>\n              </div>\n              <div class=\"additional\">{{ list.sublabel }}</div>\n            </div>\n          </div>\n          <div class=\"right\" style=\"white-space: nowrap\">\n            <span id=\"amount1\" style=\"color: rgb(3, 6, 8)\">${{ list.cost }}</span>\n            <span id=\"date\">{{ list.date }}</span>\n          </div>\n          <div class=\"right2\">\n            <i class=\"fa-solid fa-angle-right\" style=\"margin-right: -20px\"></i>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <br />\n    <div class=\"recent\">Bank & Credit Cards</div>\n    <br />\n    <div class=\"purchased-card\" style=\"cursor: pointer\">\n      <div class=\"minimal-info\">\n        <div class=\"left\">\n          <div class=\"icon\">\n            <div\n              style=\" position: relative; display: flex; justify-content: center; align-items: center; flex-direction: column; \">\n              <div\n                style=\" position: relative; display: flex; justify-content: center; align-items: center; \">\n                <img :src=\"bankImage\" id=\"bank\" alt=\"BOA\" />\n              </div>\n            </div>\n          </div>\n          <div class=\"info\">\n            <div id=\"title\">\n              <span>Bank of America</span>\n            </div>\n            <div class=\"additional\">...4765</div>\n          </div>\n        </div>\n        <div class=\"right\">\n          <span id=\"amount\" style=\"color: #6970c9\">Balance</span>\n          <span id=\"date\" style=\"color: #6970c9\">$1,326.23</span>\n        </div>\n        <i class=\"fa-solid fa-angle-up\" style=\"margin-right: -20px\"></i>\n      </div>\n    </div>\n\n    <br />\n    <div class=\"recent\">\n      Savings Goals\n      <div class=\"see-all\"><span style=\"font-size: 3rem\">+</span></div>\n    </div>\n\n    <div class=\"graph1\">\n      <div class=\"trip\">\n        Italy Trip\n        <div\n          class=\"see-all1\" style=\" color: rgb(105, 112, 201); margin-left: 32rem; margin-top: -1.5rem; font-size: 1.2rem; \">\n          See details\n        </div>\n      </div>\n      <br />\n\n      <canvas id=\"myDoughnutChart\" style=\"width: 150px; margin-left: -2rem;\"></canvas>\n\n      <div id=\"additionalText\" class=\"additional-text\"></div>\n      <div id=\"additionalText1\" class=\"additional-text1\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Chart, registerables } from \"chart.js\";\n\nexport default {\n  props: {\n    currentSection: String,\n  },\n  data() {\n    return {\n      bankImage: require('@/assets/BOA.png'),\n      purchasedList: [\n        { label: \"Cold Brew\", hex: 'rgb(8, 29, 149)', image: 'https://budgetwise.co/img/gift.811ce353.svg', sublabel: 'Starbucks', cost: '5.92', date: '03-30-2022' },\n        { label: \"Coursera\", hex: 'rgb(83, 213, 228)', image: 'https://budgetwise.co/img/education.20df2648.svg', sublabel: 'Education', cost: '39.00', date: '03-12-2022' },\n        { label: \"AppleTree\", hex: 'rgb(52, 196, 62)', image: 'https://budgetwise.co/img/groceries.e667316a.svg', sublabel: 'Groceries', cost: '3.98', date: '03-03-2022' },\n        { label: \"BKST-U-PENN\", hex: 'rgb(32, 139, 215)', image: 'https://budgetwise.co/img/shopping.a541af7b.svg', sublabel: 'Shopping', cost: '49.89', date: '03-03-2022' },\n      ],\n      myBarChart: null,\n      myDoughnutChart: null,\n    };\n  },\n  mounted() {\n    Chart.register(...registerables);\n    this.renderCharts();\n  },\n  updated() {\n    if (this.currentSection === 'home') {\n      this.renderCharts();\n    }\n  },\n  methods: {\n    renderCharts() {\n      if (this.myBarChart) {\n        this.myBarChart.destroy();\n      }\n      if (this.myDoughnutChart) {\n        this.myDoughnutChart.destroy();\n      }\n\n      const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n      const ctxDoughnut = document.getElementById(\"myDoughnutChart\").getContext(\"2d\");\n      \n      ctx.canvas.width = 400; \n      ctx.canvas.height = 400; \n      ctxDoughnut.canvas.width = 300; \n      ctxDoughnut.canvas.height = 300; \n\n      this.myBarChart = new Chart(ctx, {\n  type: \"bar\",\n  data: {\n    labels: [\"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\"],\n    datasets: [\n      {\n        label: \"Utilities\",\n        data: [450, 500, 620, 800, 690, 500],\n        backgroundColor: \"rgba(34, 167, 240)\",\n        borderColor: \"rgba(34, 167, 240)\",\n        borderWidth: 1,\n        barPercentage: 0.7,\n      },\n      {\n        label: \"Housing\",\n        data: [300, 250, 400, 400, 350, 250],\n        backgroundColor: \"rgba(242, 38, 19)\",\n        borderColor: \"rgba(242, 38, 19)\",\n        borderWidth: 1,\n        barPercentage: 0.7,\n      },\n      {\n        label: \"Entertainment\",\n        data: [200, 150, 400, 450, 350, 150],\n        backgroundColor: \"rgba(249, 105, 14)\",\n        borderColor: \"rgba(249, 105, 14)\",\n        borderWidth: 1,\n        barPercentage: 0.7,\n      },\n      {\n        label: \"Transportation\",\n        data: [350, 120, 300, 300, 350, 190],\n        backgroundColor: \"rgba(249, 191, 59)\",\n        borderColor: \"rgba(249, 191, 59)\",\n        borderWidth: 1,\n        barPercentage: 0.7,\n      },\n      {\n        label: \"Food\",\n        data: [100, 100, 100, 150, 150, 100],\n        backgroundColor: \"rgba(1,1,122)\",\n        borderColor: \"rgba(1,1,122)\",\n        borderWidth: 1,\n        barPercentage: 0.7,\n      },\n      {\n        label: \"Other\",\n        data: [400, 200, 350, 350, 350, 100],\n        backgroundColor: \"rgba(102, 51, 153)\",\n        borderColor: \"rgba(102, 51, 153)\",\n        borderWidth: 1,\n        barPercentage: 0.7,\n      },\n    ],\n  },\n  options: {\n    responsive: false,\n    maintainAspectRatio: true,\n    scales: {\n      x: {\n        stacked: true,\n        grid: {\n          display: false,\n        },\n        ticks: {\n          color: \"#000\", // Color of x-axis labels\n        },\n      },\n      y: {\n        stacked: true,\n        grid: {\n          display: false,\n        },\n        ticks: {\n          color: \"#000\", // Color of y-axis labels\n          callback: function (value) {\n            if (value >= 1500) {\n              return (value / 1000).toFixed(1) + \"k\";\n            }\n            return value;\n          },\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: \"bottom\",\n        labels: {\n          color: \"#333\", // Font color for legend labels\n          usePointStyle: true,\n          borderRadius: 1,\n          boxWidth: 30,\n        },\n        align: \"center\",\n        maxItems: 3,\n      },\n      annotation: {\n        annotations: [\n          {\n            type: \"line\",\n            mode: \"horizontal\",\n            scaleID: \"y\",\n            value: 1500,\n            borderColor: \"black\",\n            borderWidth: 0.5,\n            label: {\n              content: \"1.5k\",\n              enabled: true,\n              position: \"end\",\n            },\n          },\n          {\n            type: \"line\",\n            mode: \"horizontal\",\n            scaleID: \"y\",\n            value: 2000,\n            borderColor: \"rgba(255, 0, 0, 0.5)\",\n            borderWidth: 1,\n            borderDash: [3, 3],\n            label: {\n              position: \"right\",\n              enabled: true,\n            },\n          },\n          {\n            type: \"line\",\n            mode: \"horizontal\",\n            scaleID: \"y\",\n            value: 2500,\n            borderColor: \"rgba(255, 0, 0, 0.5)\",\n            borderWidth: 1,\n            borderDash: [3, 3],\n            label: {\n              position: \"right\",\n              enabled: true,\n            },\n          },\n        ],\n      },\n    },\n  },\n  plugins: [\n    {\n      id: \"highlightAugust\",\n      afterDraw: (chart) => {\n        const ctx = chart.ctx;\n        const xAxis = chart.scales.x;\n        const labelIndex = chart.data.labels.indexOf(\"Aug\");\n\n        if (labelIndex !== -1) {\n          const x = xAxis.getPixelForTick(labelIndex);\n          const y = xAxis.bottom;\n\n          ctx.save();\n\n          ctx.fillStyle = \"#5157bf\";\n          ctx.fillRect(x - 20, y - 20, 40, 20); \n\n          ctx.fillStyle = \"white\";\n          ctx.font = \"12px Arial\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillText(\"Aug\", x, y - 10);\n          ctx.arcTo = \"4px\"; \n\n          ctx.restore();\n        }\n      },\n    },\n  ],\n});\n\n\n      // Initialize doughnut chart\n      this.myDoughnutChart = new Chart(ctxDoughnut, {\n        type: \"doughnut\",\n        data: {\n          labels: [\"Expenses\", \"Savings\"],\n          datasets: [\n            {\n              data: [300, 300],\n              backgroundColor: [\"#31cd3e\", \"#d5d5d5\"],\n            },\n          ],\n        },\n        options: {\n          responsive: false,\n          maintainAspectRatio: false,\n          cutout: 90,\n          plugins: {\n            legend: {\n              display: false,\n            },\n            tooltip: {\n              enabled: false,\n            },\n          },\n          animation: {\n            onComplete: function (context) {\n              var chartInstance = context.chart;\n              var ctx = chartInstance.ctx;\n\n              ctx.textAlign = \"center\";\n              ctx.textBaseline = \"middle\";\n              var centerX =\n                (chartInstance.chartArea.left + chartInstance.chartArea.right) / 2;\n              var centerY =\n                (chartInstance.chartArea.top + chartInstance.chartArea.bottom) / 2;\n\n              ctx.fillStyle = \"#008000\";\n              ctx.font = \"bold 40px 'Outfit'\";\n              ctx.fillText(\"$300\", centerX, centerY - 8);\n\n              ctx.fillStyle = \"#000\";\n              ctx.font = \"normal 16px 'Outfit'\";\n              ctx.fillText(\"of 600 saved\", centerX, centerY + 25);\n              ctx.fillText(\"this month\", centerX, centerY + 45);\n            },\n          },\n        },\n      });\n\n      // Add additional text\n      document.getElementById('additionalText').innerText = \"Total Savings: $300 of $3,000\";\n      document.getElementById('additionalText1').innerText = \"by April 15, 2023\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n#rhs{\n    display: flex;\n    min-height: max-content;\n    height: 100%;\n    position: relative;\n    box-sizing: border-box;\n    flex-direction: column;\n    width: 30%;\n    margin: 3rem 8rem;\n    max-width: 110%;\n\n}\n\n.active-budget-card {\n  padding: 32px 20px;\n  border: 0.01px solid #000;\n  border-radius: 20px;\n  margin-left: 1.2rem;\n  position: relative;\n  margin-top: 40px;\n}\n\n.stats{\n  width: 50%;\n  height: 70%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.total {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 30px 30px;\n  margin-left: 5rem;\n  font-family: Outfit;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 130%;\n  text-align: center;\n}\n\n.divider {\n  border: 1px solid #000;\n  background-color: #000;\n  width: 0;\n  height: 40px;\n}\n\n.middle{\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px 30px;\n  font-family: Outfit;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 130%;\n  text-align: center;\n  align-items: center;\n}\n\n.right1{\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-right: -7rem;\n  padding: 30px 30px;\n  font-family: Outfit;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 130%;\n  text-align: center;\n  align-items: center;\n}\n\n.box-progress-bar {\n  width: 100%;\n  height: 32px;\n  border-radius: 6px;\n  overflow: hidden;\n  background-color: #d5d5d5;\n  margin: 2px;\n}\n\n.box-progress {\n  display: block;\n  height: 32px;\n  background-color: #6970c9;\n  border-radius: 6px;\n}\n\n.recent{\n  font-family: Outfit;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  text-align: left;\n  margin-left: 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.recent-transactions {\n  flex: 1; \n}\n\n.see-all {\n  cursor: pointer; \n}\n\n.purchased-card{\n  width: 23rem;\n  padding: 10px 30px;\n  border: 0.01px solid #000;\n  border-radius: 10px;\n  margin: 0.7rem;\n  margin-left: 1rem;\n  position: relative;\n  .right{\n    margin-right: -90px;\n    text-align: right;\n  }\n}\n\n.minimal-info {\n  display: flex;\n  gap: 5rem;\n  align-items: center;\n  justify-content: space-between;\n\n}\n\n.left {\n  display: flex;\n  column-gap: 10px;\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}